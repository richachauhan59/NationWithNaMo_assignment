{"version":3,"sources":["components/Form.jsx","components/Todo.jsx","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","placeholder","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","uuid","name","Todo","todo","map","item","filter","elem","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","handleFilter","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9022427.chunk.js","sourcesContent":["import React from 'react'\nimport uuid from 'react-uuid'\n\n\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\n    const inputTextHandler = (e) => {\n        setInputText(e.target.value)\n    }\n    const submitTodoHandler = (e) => {\n        e.preventDefault()\n        setTodos([\n            ...todos, {text: inputText , completed: false , id:uuid()}\n        ])\n        setInputText(\"\")\n    }\n    const handleState = (e) =>{\n      setStatus(e.target.value)\n    }\n\n    return(\n        <form>\n        <input placeholder=\"add todo\" value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n          <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <div className=\"select\">\n          <select onChange={handleState} name=\"todos\" className=\"filter-todo\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"uncompleted\">Uncompleted</option>\n            <option value=\"#\">hashTag</option>\n          </select>\n        </div>\n      </form>\n    )\n}\n\nexport default Form","import React from 'react'\n\nconst Todo = ({text,todo, todos, setTodos}) => {\n\n    const handleDelete = () => {\n        setTodos(todos.filter((elem) => elem.id !== todo.id))\n    }\n    const handleComplete = () => {\n        setTodos(todos.map((item) => {\n            if(item.id === todo.id){\n                return{\n                    ...item, completed: !item.completed\n                }\n            }\n            return item\n        }))\n    }\n    \n\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}> {text} </li>\n            <button onClick={handleComplete} className=\"complete-btn\" ><i className=\"fas fa-check\"></i></button>\n            <button onClick={handleDelete} className=\"trash-btn\" ><i className=\"fas fa-trash\"></i></button>\n        </div>\n    )\n}\nexport default Todo","import React from 'react'\nimport Todo from './Todo'\n\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\n    return(\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n               {\n                   filteredTodos.map((todo )=> (\n                       <Todo todo={todo} todos={todos} setTodos={setTodos} text={todo.text} key={todo.id} />\n                   ))\n               }\n            </ul>\n        </div>\n    )\n}\nexport default TodoList","import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList'\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\")\n  const [todos, setTodos] = useState([])\n  const [status , setStatus] = useState(\"all\")\n  const [filteredTodos, setFilteredTodos] = useState([])\n\n  useEffect(() => {\n    getLocalTodos()\n  },[])\n\n  useEffect(() => {\n    handleFilter()\n    saveLocalTodos()\n  }, [todos, status] )\n\n  const handleFilter = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed == true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed == false))\n        break;\n        case '#':\n          setFilteredTodos(todos.filter(todo => todo.text[0] == '#'))\n          break;\n      default:\n        setFilteredTodos(todos)\n        break;\n    }\n  }\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n  }\n  const getLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]))\n    }\n    else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"))\n      setTodos(todoLocal)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Add ToDo List</h1>\n      </header>\n      <Form \n        inputText={inputText} \n        todos={todos} \n        setTodos={setTodos} \n        setInputText={setInputText}\n        setStatus={setStatus}\n        \n      />\n      <TodoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}